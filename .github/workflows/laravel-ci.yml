name: Laravel CI/CD with Vue, Inertia.js, Tailwind CSS, Redis, MySQL, and FTP Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: your_database_name
      REDIS_PASSWORD: redis_password

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-start-period=10s
          --health-timeout=5s
          --health-retries=5
      # redis:
      #   image: redis:latest
      #   ports:
      #     - 6379:6379
      #   env:
      #     REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      #   options: >-
      #     --health-cmd="redis-server --test-memory 100"
      #     --health-start-period=10s
      #     --health-timeout=5s
      #     --health-retries=5

    steps:
      # 1. Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Set up PHP (with necessary extensions for Laravel)
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, bcmath, zip, pdo, pdo_mysql, redis
          coverage: none

      # 3. Install Composer dependencies (Production-only dependencies)
      - name: Install Composer dependencies
        run: |
          composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev

      # 4. Set up Node.js (for frontend build)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # 5. Install npm dependencies
      - name: Install npm dependencies
        run: |
          npm install

      # 6. Run Laravel database migrations
      - name: Run database migrations
        run: |
          php artisan migrate --force

      # 7. Run Laravel Artisan optimize commands for production
      - name: Run Laravel Artisan optimize commands
        run: |
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

      # 8. Run tests (you can choose to skip this step in production)
      - name: Run tests
        run: |
          php artisan test

      # 9. Compile frontend assets for production (Vue + Tailwind CSS)
      - name: Compile frontend assets for production
        run: |
          npm run production

      # 10. Check Tailwind CSS build (for production-ready output)
      - name: Check Tailwind CSS build
        run: |
          npm run build:tailwind

      # 11. Deploy to shared hosting via FTP (Production deployment)
      - name: Deploy to shared hosting via FTP
        if: success()  # Only deploy if previous steps were successful
        run: |
          # Install lftp for FTP deployment
          sudo apt-get install -y lftp

          # Use lftp to upload files to your shared hosting server
          lftp -e "
            set ftp:ssl-allow no;  # Disable SSL if not supported by FTP server
            open -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_HOST }};
            mirror -R ./ /public_html/your-app-directory;  # Adjust path to your app's root on the server
            bye
          "
